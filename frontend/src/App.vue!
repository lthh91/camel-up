<template>
  <div id="registration" v-if="!registered">
    <input v-model="pName" placeholder="Enter your name">
    <input v-model.number="nP" type="number" placeholder="Number of bot players">
    <button v-on:click="register(pName, nP)">Register</button>
  </div>
  <div class="notification">
      <button v-on:click="request_names">Get player names</button>
      <button v-on:click="next_player">End turn</button>
  </div>
  <div v-for="player in this.players" >
    <Player :playerName=player.name :playerId=player.id :currentP=this.currentP />
  </div>
</template>

<script>
import io from "socket.io-client";
import Player from "./components/Player.vue";

export default {
  name: "App",
  data: function () {
    return {
      registered: false,
      currentP: "",
      players: [],
    }
  },
  components: {
    Player
  },
  created() {
    this.connectWebsocket();
  },
  beforeUnmount() {
    this.disconnectWebsocket();
  },
  methods: {
    connectWebsocket() {
      this.socket = io("/message", {path: "/backend/socket.io"});
      this.socket.on("register", (message) => {
          console.log(message);
      });
      this.socket.on("notification", (message) => {
          console.log(message["content"]);
      });
      this.socket.on("info", (content) => {
          console.log(content);
          if (content["registered"] == "True") {
            this.registered = true
          }
      });
      this.socket.on("player", (content) => {
          console.log(content);
          this.currentP = content;
      });
    },
    disconnectWebsocket() {
      if (this.socket) {
        this.socket.emit("disconnect");
        this.socket.disconnect();
      }
    },
    register: function(name, nPlayers) {
      if (this.socket) {
        this.socket.emit("register", name, nPlayers);
      } else {
        console.log(name, nPlayers);
      }
    },
    request_names: function() {
      console.log("Request names")
      this.socket.emit("players");
    },
    next_player: function() {
      console.log("Next player")
      this.socket.emit("next_player");
    },
  },
}
</script>

<style>
#app {
  font-family: Avenir, Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
</style>
